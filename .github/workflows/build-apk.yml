name: Build Android APK

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
      version_name:
        description: 'Version name (optional)'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.version.outputs.version_name }}
      version_code: ${{ steps.version.outputs.version_code }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      
    - name: Install dependencies
      run: |
        npm install
        cd client && npm install
        
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli
      
    - name: Update version
      id: version
      run: node scripts/version-manager.js
      
    - name: Build React app
      run: |
        cd client
        CI=false npm run build
        
    - name: Setup Capacitor
      run: node scripts/setup-capacitor.js
        
    - name: Build Debug APK
      if: ${{ github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == '' }}
      run: |
        cd client/android
        chmod +x gradlew
        ./gradlew assembleDebug
        
    - name: Build Release APK
      if: ${{ github.event.inputs.release_type == 'release' }}
      run: |
        cd client/android
        chmod +x gradlew
        ./gradlew assembleRelease
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        
    - name: Sign Release APK
      if: ${{ github.event.inputs.release_type == 'release' }}
      run: node scripts/sign-apk.js client/android/app/build/outputs/apk/release/app-release-unsigned.apk client/android/app/build/outputs/apk/release/app-release-signed.apk
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        
    - name: Upload Debug APK
      if: ${{ github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-${{ steps.version.outputs.version_name }}
        path: client/android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Release APK
      if: ${{ github.event.inputs.release_type == 'release' }}
      uses: actions/upload-artifact@v4
      with:
        name: app-release-${{ steps.version.outputs.version_name }}
        path: client/android/app/build/outputs/apk/release/app-release-signed.apk
        
    - name: Security Check
      run: node scripts/security-check.js
      
    - name: Test APK
      run: |
        if [ "${{ github.event.inputs.release_type }}" == "release" ]; then
          node scripts/test-apk.js client/android/app/build/outputs/apk/release/app-release-signed.apk
        else
          node scripts/test-apk.js client/android/app/build/outputs/apk/debug/app-debug.apk
        fi
        
    - name: Create GitHub Release
      if: ${{ github.event.inputs.release_type == 'release' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
      run: |
        node scripts/create-release.js client/android/app/build/outputs/apk/release/app-release-signed.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}